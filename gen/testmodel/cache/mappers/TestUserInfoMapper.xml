<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "gobatis"
        "https://raw.githubusercontent.com/wenj91/gobatis/master/gobatis.dtd">
<mapper namespace="TestUserInfoMapper">
  <sql id="Base_Column_List">
    id,nanosecond,data,content,create_time,update_time
  </sql>
  <insert id="save">
    insert into test_user_info (id, nanosecond, data, content, create_time, update_time)
    values (#{id},#{nanosecond},#{data},#{content},#{create_time},#{update_time})
  </insert>
  <insert id="saveSelective">
    insert into test_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="Id != nil and Id != ''">
        id,  
      </if>
      <if test="Nanosecond != nil and Nanosecond != ''">
        nanosecond,  
      </if>
      <if test="Data != nil and Data != ''">
        data,  
      </if>
      <if test="Content != nil and Content != ''">
        content,  
      </if>
      <if test="CreateTime != nil and CreateTime != ''">
        create_time,  
      </if>
      <if test="UpdateTime != nil and UpdateTime != ''">
        update_time,  
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="Id != nil and Id != ''">
        #{Id},
      </if>
      <if test="Nanosecond != nil and Nanosecond != ''">
        #{Nanosecond},
      </if>
      <if test="Data != nil and Data != ''">
        #{Data},
      </if>
      <if test="Content != nil and Content != ''">
        #{Content},
      </if>
      <if test="CreateTime != nil and CreateTime != ''">
        #{CreateTime},
      </if>
      <if test="UpdateTime != nil and UpdateTime != ''">
        #{UpdateTime},
      </if>
    </trim>
  </insert>
  <update id="update">
    update test_user_info
    set nanosecond = #{Nanosecond},
    data = #{Data},
    content = #{Content}
    where id = #{Id}
  </update>
  <update id="updateSelective">
    update test_user_info
    <set>
      <if test="Nanosecond != nil and Nanosecond != ''">
        nanosecond = #{Nanosecond},
      </if>
      <if test="Data != nil and Data != ''">
        data = #{Data},
      </if>
      <if test="Content != nil and Content != ''">
        content = #{Content},
      </if>
    </set>
    where id = #{Id}
  </update>
  <delete id="delete">
    delete from test_user_info
    where id = #{Id}
  </delete>
  <select id="findOne" resultType="struct">
    select 
      <include refid="Base_Column_List" />
    from test_user_info
    where id = #{Id}
    limit 1
  </select>
  <select id="findOneByNanosecond" resultType="struct">
    select 
      <include refid="Base_Column_List" />
    from test_user_info
    where nanosecond = #{Nanosecond}
    limit 1
  </select>
  <select id="findSelective" resultType="structs">
    select 
      <include refid="Base_Column_List" />
    from test_user_info
    <where>
      <if test="Nanosecond != nil and Nanosecond != ''">
        nanosecond = #{Nanosecond},
      </if>
      <if test="Data != nil and Data != ''">
        data = #{Data},
      </if>
      <if test="Content != nil and Content != ''">
        content = #{Content},
      </if>
      <if test="CreateTime != nil and CreateTime != ''">
        create_time = #{CreateTime},
      </if>
      <if test="UpdateTime != nil and UpdateTime != ''">
        update_time = #{UpdateTime},
      </if>
    </where>
  </select>
  <update id="update">
    update test_user_info
    set nanosecond = #{Nanosecond},
    data = #{Data},
    content = #{Content}
    where id = #{Id}
  </update>
  <update id="updateSelective">
    update test_user_info
    <set>
      <if test="Nanosecond != nil and Nanosecond != ''">
        nanosecond = #{Nanosecond},
      </if>
      <if test="Data != nil and Data != ''">
        data = #{Data},
      </if>
      <if test="Content != nil and Content != ''">
        content = #{Content},
      </if>
    </set>
    where id = #{Id}
  </update>
</mapper>
